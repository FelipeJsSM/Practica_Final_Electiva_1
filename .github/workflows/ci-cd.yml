name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - run: npm ci
      - run: npm run lint
      - run: npm test

      # build & test health in docker
      - name: Build image
        run: docker build -t bookapp:ci .
      - name: Up (compose)
        run: |
          docker compose up -d
          for i in {1..30}; do
            if curl -fsS http://localhost:8200/health >/dev/null; then
              echo "App is healthy"; exit 0
            fi
            echo "Waiting for health..." && sleep 2
          done
          echo "Healthcheck failed" && docker compose logs app && exit 1

      # push to Docker Hub
      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Tag & Push
        if: github.ref == 'refs/heads/main'
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/bookapp:latest"
          docker tag bookapp:ci $IMAGE
          docker push $IMAGE

  cd:
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd ${{ secrets.DEPLOY_PATH }}
            docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
            # Actualiza compose.prod con la imagen de Docker Hub
            sed -i 's|REGISTRY_USER_OR_ORG/bookapp:latest|'"${{ secrets.DOCKERHUB_USERNAME }}"'/bookapp:latest|g' docker-compose.prod.yml
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
            docker image prune -f
